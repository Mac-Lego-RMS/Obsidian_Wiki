{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Obsidian Notes","text":"<p>Publish your public notes with MkDocs</p>"},{"location":"#hello-world","title":"Hello World!","text":"<p>The <code>index.md</code> in the <code>/docs</code> folder is the homepage you see here.</p> <p>The folders in <code>/docs</code> appear as the main sections on the navigation bar.</p> <p>The notes appear as pages within these sections. For example, [[Note 1]] in <code>Topic 1</code></p>"},{"location":"Wiki%20%26%20Dateiablage/","title":"Wiki & Dateiablage","text":"<p>EV3-Software</p> <p>Gyro-Drift</p> <p>GitHub</p> <p>Video-Inspiration</p> <p>Python Crashkurs</p> <p>Fragenkatalog</p> <p>Crashkurs Pybricks</p> <p>Analyse Forschungsprojekt</p> <p>Analyse Robotdesign</p> <p>Analyse Grundwerte</p> <p>Untitled</p> <p>Robot-Design</p> <p>Siegen</p> <p>Bewertungsb\u00f6gen Fulda</p> <p>Optimierung FoPro</p> <p>Tag der Leidenschaften - Verbesserungen</p> <p>Grundwerte Verbesserungen</p> <p>Zeitplan Siegen</p>"},{"location":"Forschungsprojekt/Analyse%20Forschungsprojekt/","title":"Analyse Forschungsprojekt","text":"<p>unterlagen (dokumentation) vom Team d\u00fcrfen eigl. nur w\u00e4hrend der pr\u00e4si angeguckt werden, da sonst ein ungerechter vorteil best\u00fcnde</p> <p>Fokus:</p> <ul> <li>Inhalt:<ul> <li>Wie hat das team erkl\u00e4rt, wie es andere f\u00fcr das Hobbie begeistert hat</li> </ul> </li> <li>Form:<ul> <li>Kreativit\u00e4t</li> <li>Kunst</li> </ul> </li> </ul> <p></p> <p></p>","tags":["Forschungsprojekt"]},{"location":"Forschungsprojekt/Fragenkatalog/","title":"Fragenkatalog","text":"<p>\u201cFragenkatalog\u201d zur Gestaltung des VR-Videoprojekts \u201cSpeedcubing\u201d</p> <p>Folgende Effekte und Emotionen sollen mit dem Videoprojekt erzeugt werden:</p> <ul> <li>Realit\u00e4tsnahes Bild von Speedcubing soll erzeugt werden</li> <li>Wettkampfatmosph\u00e4re<ul> <li>Spannung und Aufregung</li> <li>Erwartungsvolle Zuschauerschaft</li> <li>Konzentration</li> </ul> </li> <li>Beim Zuschauer soll ein Gef\u00fchl von Begeisterung ausgel\u00f6st werden<ul> <li>Funktion als Motivation, selber einmal das L\u00f6sen eines Zauberw\u00fcrfels zu versuchen</li> <li>Potenzielles \u00d6ffnen der T\u00fcr zu einer neuen Leidenschaft</li> </ul> </li> </ul> <p>Zum Dreh:</p> <ul> <li>Welche Kameraperspektive erachten Sie als sinnvoll und welchen Bildausschnitt von den 360 Grad sollte man zeigen<ul> <li>Ist die Ego-Perspektive die beste?</li> </ul> </li> <li>Wie sollte das Setting aufgebaut sein?</li> <li>Belichtung, usw.?</li> </ul> <p>Zur Videobearbeitung:</p> <ul> <li>Ist eine Bearbeitung \u00fcberhaupt sinnvoll?</li> <li>K\u00f6nnen Effekte, wie Slow-Motion, hilfreich sein, um unsere Wirkungsabsicht zu verst\u00e4rken?</li> </ul> <p>Zum Sounddesign:</p> <ul> <li>Wie kann man die gew\u00fcnschten Effekte auf den Zuschauer am besten musikalisch untermalen?</li> </ul>","tags":["Forschungsprojekt"]},{"location":"Forschungsprojekt/Tag%20der%20Leidenschaften%20-%20Verbesserungen/","title":"Tag der Leidenschaften   Verbesserungen","text":"","tags":["Forschungsprojekt"]},{"location":"Forschungsprojekt/Tag%20der%20Leidenschaften%20-%20Verbesserungen/#tag-der-leidenschaften","title":"Tag der Leidenschaften","text":"<p>\u21d2 wir haben nur noch ca. 2 Wochen,</p>","tags":["Forschungsprojekt"]},{"location":"Forschungsprojekt/Tag%20der%20Leidenschaften%20-%20Verbesserungen/#konzept-fur-siegen","title":"Konzept f\u00fcr Siegen:","text":"<ul> <li>Bilder von SR-Sitzung / Offenes Ohr machen, wie wir das Konzept vom Tag der Leidenschaften vorstellen</li> </ul>","tags":["Forschungsprojekt"]},{"location":"Wettbewerb/Analyse%20Grundwerte/","title":"Analyse Grundwerte","text":"<ul> <li>Jury stellt dem Team Fragen stellen f\u00fcr 3 min</li> </ul>"},{"location":"Wettbewerb/Bewertungsb%C3%B6gen%20Fulda/","title":"Bewertungsb\u00f6gen Fulda","text":""},{"location":"Wettbewerb/Grundwerte%20Verbesserungen/","title":"Grundwerte Verbesserungen","text":""},{"location":"Wettbewerb/Grundwerte%20Verbesserungen/#hintergrund","title":"Hintergrund:","text":"<ul> <li>keine Fragen w\u00e4hrend Grundwerte Teil der Jurybewertung</li> </ul>"},{"location":"Wettbewerb/Grundwerte%20Verbesserungen/#optimierungen","title":"Optimierungen:","text":"<ul> <li>Pr\u00e4sentation vorbereiten</li> </ul>"},{"location":"Wettbewerb/Siegen/","title":"Siegen","text":"<p>Wir haben uns f\u00fcr folgendes entschieden:</p> <ul> <li> <p>Anreise am Samstag per Auto</p> <ul> <li>Wir nehmen die Autos von:</li> </ul> </li> <li> <p>Wir \u00fcbernachten von Samstag auf Sonntag</p> <ul> <li>Rausch bucht</li> </ul> </li> </ul>"},{"location":"Wettbewerb/Siegen/#ice-oder-auto","title":"ICE oder Auto","text":"<ul> <li>ICE braucht l\u00e4nger und ist wahrscheinlich teurer</li> <li>wir brauchen eh ein Auto, um die Teile zu transportieren</li> </ul> <p>\u21d2 Rausch fragen, ob und wie wir \u00fcbernachten k\u00f6nnen</p>"},{"location":"Wettbewerb/Siegen/#ubernachten","title":"\u00dcbernachten","text":""},{"location":"Wettbewerb/Zeitplan%20Siegen/","title":"Zeitplan Siegen","text":"<p>08.00 Uhr Start der Anmeldung 08.30 Uhr Coach-Briefing 09.00 Uhr Er\u00f6ffnung 09.20 Uhr Start Jury-Session &amp; Testrunden ca. 14.45 Uhr Best 3 Forschung ab ca. 15.30 Finalrunden 17.00 Uhr Siegerehrung 18.00 Uhr Ende der Veranstaltung</p>"},{"location":"Wettbewerb/W%C3%B6chentliches%20Meeting/Leitfaden%20Teamwork/","title":"Inhalt:","text":"<p>Um die neuen Teammitglieder besser bei ihrer Integration in das Robotik-Team zu unterst\u00fctzen, haben wir folgende Grunds\u00e4tze zur weiteren Organisierung der Teamarbeit formuliert:</p>"},{"location":"Wettbewerb/W%C3%B6chentliches%20Meeting/Leitfaden%20Teamwork/#roboterprogrammierung","title":"Roboterprogrammierung","text":"<p>Die Programmierung mit Pybricks hat f\u00fcr Erfahrene Programmierer viele Vorteile, ist aber f\u00fcr Beginner mehr eine Barriere. Daher legen wir folgende Arbeitsweise fest:</p>"},{"location":"Wettbewerb/W%C3%B6chentliches%20Meeting/Leitfaden%20Teamwork/#programmierung-in-scratch","title":"Programmierung in Scratch:","text":"<ul> <li>Aufspielen der Standard-Firmware auf einen Roboter (bei 2 identische Robotern sehr gut umsetzbar)</li> <li>Programmierung in Scratch<ul> <li>Sp\u00e4ter Umprogrammierung in Pybricks f\u00fcr den Wettbewerb (mit Unterst\u00fctzung durch Python-Programmierer)</li> </ul> </li> </ul>"},{"location":"Wettbewerb/W%C3%B6chentliches%20Meeting/Leitfaden%20Teamwork/#programmierung-in-python-pybricks","title":"Programmierung in Python (Pybricks)","text":"<ul> <li>Upload/Pushen aller \u00c4nderungen auf Github</li> <li>Programmierung \u00fcber VS-Code<ul> <li>Programmieren von Schaltfl\u00e4chen, \u00fcber die die h\u00e4ufigsten Funktionen aufgerufen werden k\u00f6nnen (Upload, Stop, Firmware aufspielen)?</li> </ul> </li> </ul>"},{"location":"Wettbewerb/W%C3%B6chentliches%20Meeting/Leitfaden%20Teamwork/#wochentliche-meetings","title":"w\u00f6chentliche Meetings","text":"<ul> <li>w\u00f6chentlicher Austausch mit dem gesamten Team</li> <li>Freitag 16:00-18:00 Uhr</li> <li>Teilnahme \u00fcber<ul> <li>Discord</li> <li>physische (+geistige) Anwesenheit</li> </ul> </li> <li>Teilnahme erw\u00fcnscht, aber nicht verpflichtend (bei Wahrnehmung anderer Termine etc.)</li> <li>Protokollierung<ul> <li>Amt des Protokollanten<ul> <li>Rotierendes Amt?</li> <li>Bestimmung am Anfang des Meetings?</li> </ul> </li> <li>Anwesenheitsnotierung?</li> <li>stichpunktartiges Festhalten des Inhalts</li> <li>Erarbeitung eines finalen Dokumentes in Teamarbeit<ul> <li>Auflistung der Aufgaben f\u00fcr die Woche</li> <li>Dokument wird f\u00fcr alle zug\u00e4nglich zum Nachlesen hochgeladen<ul> <li>vorteilhaft f\u00fcr Daniel Rausch und andere Abwesende</li> </ul> </li> </ul> </li> </ul> </li> <li>Formulierung von Aufgaben f\u00fcr die n\u00e4chste Woche</li> </ul>"},{"location":"Wettbewerb/W%C3%B6chentliches%20Meeting/Leitfaden%20Teamwork/#inhalt_1","title":"Inhalt:","text":""},{"location":"Wettbewerb/W%C3%B6chentliches%20Meeting/Leitfaden%20Teamwork/#aufgabenstellungen","title":"Aufgabenstellungen","text":"<ul> <li>konkrete Aufgabenverteilung an Personen / Arbeitsgruppen</li> <li>Festhalten in Kalender &amp; Aufgabenplan</li> </ul>"},{"location":"Wettbewerb/W%C3%B6chentliches%20Meeting/Leitfaden%20Teamwork/#robotgame","title":"Robotgame","text":"<ul> <li>Fahrtenbesprechung<ul> <li>+ aktueller Stand</li> </ul> </li> <li>Fahrten ansehen/demonstrieren<ul> <li>Live-\u00dcbertragung per Webcam aus dem Raum</li> <li>Birds-Eye-View auf das Spielfeld?</li> </ul> </li> <li>Ansprechen aktueller Probleme<ul> <li>Teamdiskussion</li> <li>Suchen nach L\u00f6sungsans\u00e4tzen</li> </ul> </li> <li>Code-Review (Pybricks + Scratch)<ul> <li>Erkl\u00e4rung von neuen Funktionen (--&gt; siehe Github Commits)</li> <li>Weg f\u00fcr \"Beginner\", fortgeschrittene Programmierung mit Python zu lernen</li> <li>ggf. Live-\u00dcbersetzen von Scratch zu Pybricks</li> </ul> </li> </ul>"},{"location":"Wettbewerb/W%C3%B6chentliches%20Meeting/Leitfaden%20Teamwork/#robotdesign","title":"Robotdesign","text":"<p>(Programmpunkt je nach Anlass, sonst optional)</p> <ul> <li>CAD-Modell (Stud.io) aktualisieren (bzw. \u00c4nderungen besprechen)</li> <li>Pr\u00e4sentation updaten</li> </ul>"},{"location":"Wettbewerb/W%C3%B6chentliches%20Meeting/Leitfaden%20Teamwork/#fopro","title":"FoPro","text":"<ul> <li>Besprechung aktueller Stand</li> <li>Aufgabenverteilung f\u00fcr n\u00e4chste Woche</li> <li>Pr\u00e4sentation<ul> <li>Aktueller Stand / aktuelle Pr\u00e4sentationsdatei</li> <li>Feedback und Verbesserungen</li> </ul> </li> <li>Terminplan besprechen / aktualisieren<ul> <li>Deadlines aktualisieren</li> </ul> </li> <li>Arbeiten in Teamarbeit<ul> <li>Formulierung von Texten/Nachrichten/Briefen</li> <li>Aktualisieren der Pr\u00e4sentation</li> </ul> </li> </ul>"},{"location":"Wettbewerb/W%C3%B6chentliches%20Meeting/Leitfaden%20Teamwork/#aob-any-other-business","title":"AOB (any other business)","text":"<ul> <li>beispielhafte Themen:<ul> <li>Rausch's neuer alter Roller</li> <li>Jannik's neuer alter Roller</li> <li>Teamdynamik<ul> <li>Planen von Teambuilding-Aktionen</li> <li>Besprechung von aktuellen Problemen</li> </ul> </li> </ul> </li> </ul> <pre><code>    V0.1\n    2023-11-10\n</code></pre>"},{"location":"Wettbewerb/W%C3%B6chentliches%20Meeting/W%C3%B6chentliches%20Meeting/","title":"\ud83d\udcda Vorablesen","text":"<ul> <li> <p>Dokumente</p> <p>Leitfaden Teamwork</p> <p>F\u00fcge hier deine Dokumente hinzu ...</p> </li> <li> <p>Team-Updates &amp; Kontrollen</p> <p>F\u00fcge hier Aktualisierungen und Kontrollen deiner Teammitglieder hinzu ...</p> </li> </ul>"},{"location":"Wettbewerb/W%C3%B6chentliches%20Meeting/W%C3%B6chentliches%20Meeting/#ablauf","title":"\u23f0Ablauf","text":"<ul> <li> Robotgame<ul> <li> Fahrtenbesprechung (aktueller Stand)</li> <li> Fahrten ansehen / demonstrieren</li> <li> Aktuelle Probleme</li> </ul> </li> <li> Programmierung<ul> <li> Code-Review<ul> <li> funktionierende bestehende Programme</li> <li> neue Funktionen</li> </ul> </li> <li> Scratch-Programme:<ul> <li> gemeinsames \u00dcbersetzen der neuen Programme</li> <li> Inbetriebnahme der mit Scratch gebauten Module mit Python</li> </ul> </li> </ul> </li> <li> Robotdesign<ul> <li> Vorstellung neuer \u00c4nderungen am Roboter in Stud.io</li> <li> Pr\u00e4sentation vorbereiten:<ul> <li> Stichpunkte sammeln</li> </ul> </li> </ul> </li> <li> Forschungsprojekt<ul> <li> Besprechung aktueller Stand</li> <li> Sammeln neuer Erkenntnisse</li> <li> Aufgabenverteilung<ul> <li> Arbeiten in Teamarbeit an wichtigen Dokumenten</li> </ul> </li> </ul> </li> <li> Aufgabenverteilung f\u00fcr n\u00e4chste Woche<ul> <li> Zuweisung von Missionen f\u00fcr Robotgame</li> <li> Festlegung der Unterst\u00fctzung f\u00fcr neue Teammitglieder von den \u201cAlten Hasen\u201d, suchen von Terminen zum gemeinsamen Arbeiten</li> </ul> </li> <li> AOB (any other business)</li> </ul>"},{"location":"Wiki%20Robotgame%20%26%20Robotdesign/Analyse%20Robotdesign/","title":"Analyse Robotdesign","text":"<p>innovatives, robustes Design</p> <ul> <li>kreative &amp; effiziente Programmierung</li> <li>es geht weniger um die Ergebnisse als um den Prozess und die \u00fcberwundenen Sackgassen</li> <li> <p>Roboter wird wenn nicht auf dem Spieltisch vorgestellt</p> <p></p> </li> </ul> <p></p> <p></p>","tags":["Robotgame"]},{"location":"Wiki%20Robotgame%20%26%20Robotdesign/Crashkurs%20Pybricks/","title":"Firmware","text":"<p>Pybricks ist eine eigene Firmware, die auf den Lego Spike Prime geflasht werden kann.</p> <p>Sie ersetzt das vorhandene Betriebssystem von Lego.</p> <p>Programmiert wird der Spike Prime dann \u00fcber die Schnittstellen vom Pybricks Team, die sich in der WEB-IDE und in einem Command-Line-Tool finden.</p> <p>(Wir programmieren den Roboter in der WEB-IDE und downloaden die ge\u00e4nderten Programme in unser Git-Repository. Auf diese Weise verfolgen wir \u00c4nderungen.)</p>","tags":["Programmierung"]},{"location":"Wiki%20Robotgame%20%26%20Robotdesign/Crashkurs%20Pybricks/#bibliotheken","title":"Bibliotheken","text":"<ul> <li>F\u00fcgen dem Programm vorgefertigte Funktionen hinzu</li> <li>z.B. Drivebase, Gyro</li> </ul> <p>[!important] F\u00fcr euch nicht relevant, solange ihr den Kopf des Programms einfach \u00fcbernehmt  </p>","tags":["Programmierung"]},{"location":"Wiki%20Robotgame%20%26%20Robotdesign/Crashkurs%20Pybricks/#deklaration","title":"Deklaration","text":"<ul> <li>z.B. Deklarieren einer Variable</li> <li>Name <code>right_motor</code></li> <li>Objekt vom Typ Motor</li> <li>Port <code>Port.A</code></li> <li>Zus\u00e4tze <code>Direction.COUNTERCLOCKWISE</code></li> <li>siehe Dokumentation</li> </ul> <p>[!info] Pybricks Documentation \u2014 pybricks v3.4.0b2 documentation Pybricks modules https://docs.pybricks.com/en/latest/ </p>","tags":["Programmierung"]},{"location":"Wiki%20Robotgame%20%26%20Robotdesign/Crashkurs%20Pybricks/#drivebase","title":"Drivebase","text":"<p>mithilfe von diesem Objekt werden so gut wie alle Fahrtbewegungen vollzogen.</p> <ul> <li>Motoren deklarieren</li> <li>Raddurchmesser</li> <li>Abstand der R\u00e4der voneinander</li> <li>Deklaration von Grundwerten</li> <li>Z. B. Speed, Beschleunigung</li> <li> <p>\u2018 Nutzung vom Gyrosensor einschaltbar</p> <p>\u21d2 hier wird dann ein schon trainierter PID verwendet. (f\u00e4hrt sehr gut)</p> </li> <li> <p>Anders als beim EV3 setzt man diese Werte einmal und dann gelten sie bei jeder     Verwendung der Drivebase  </p> </li> </ul>","tags":["Programmierung"]},{"location":"Wiki%20Robotgame%20%26%20Robotdesign/Crashkurs%20Pybricks/#einzelne-fahrten","title":"Einzelne Fahrten","text":"<p>Unsere Fahrten werden als Funktion programmiert. So k\u00f6nnen sie sp\u00e4ter einfach aufgerufen werden:</p> <pre><code>def nameB()\n    print(\"Goodybe World\")\ndef nameA()\n    print(\"Hello World\")\n\n# Ablauf:\nnameA()\nnameB()\n</code></pre> <p>Ergibt:</p> <pre><code>Hello World\nGoodbye World\n</code></pre>","tags":["Programmierung"]},{"location":"Wiki%20Robotgame%20%26%20Robotdesign/Crashkurs%20Pybricks/#syntax","title":"Syntax","text":"","tags":["Programmierung"]},{"location":"Wiki%20Robotgame%20%26%20Robotdesign/Crashkurs%20Pybricks/#generell-gilt","title":"Generell gilt:","text":"<p>pro Zeile einen Befehl</p> <pre><code>print(\"Battery voltage: \"+str(hub.battery.voltage())+\" mV\")\n</code></pre>","tags":["Programmierung"]},{"location":"Wiki%20Robotgame%20%26%20Robotdesign/Crashkurs%20Pybricks/#ausnahme","title":"Ausnahme:","text":"<p>ein Befehl kann manchmal auch auf mehrere Zeilen aufgeteilt werden:</p> <pre><code>drive_base = DriveBase(\n    right_motor,\n    left_motor,\n    wheel_diameter=56,\n    axle_track=96\n)\n</code></pre>","tags":["Programmierung"]},{"location":"Wiki%20Robotgame%20%26%20Robotdesign/Crashkurs%20Pybricks/#einruckungen","title":"Einr\u00fcckungen","text":"<p>F\u00fcr Schleifen, Verzweigungen und Funktionen muss der nachfolgende Code einger\u00fcckt werden (Ersatz f\u00fcr geschweifte Klammern in Java)  </p> <pre><code>while hub.imu.heading() &gt;= 5:\n        left_motor.run(400)\n</code></pre>","tags":["Programmierung"]},{"location":"Wiki%20Robotgame%20%26%20Robotdesign/Crashkurs%20Pybricks/#einheiten","title":"Einheiten","text":"<ul> <li>L\u00e4ngen in Millimeter</li> <li>Zeit in Millisekunden</li> <li>Winkel in Grad</li> <li>Straight Speed von 1 - 987</li> <li>Straight Acceleration von 1 - 1000</li> <li>Die Werte f\u00fcr Turn sollten nicht ver\u00e4ndert werden, da er dann nicht mehr genau f\u00e4hrt</li> </ul>","tags":["Programmierung"]},{"location":"Wiki%20Robotgame%20%26%20Robotdesign/Crashkurs%20Pybricks/#beispiele","title":"Beispiele","text":"","tags":["Programmierung"]},{"location":"Wiki%20Robotgame%20%26%20Robotdesign/EV3-Software/","title":"EV3 Software","text":"<p>Dokumentation zum Nachschlagen:</p> <p>https://mindstorms.tokyo/en/</p>","tags":["Programmierung"]},{"location":"Wiki%20Robotgame%20%26%20Robotdesign/GitHub/","title":"GitHub","text":"<p>Github ist eine Cloudplattform von Microsoft, die die Nutzung von GIT im Team streamlined.</p>","tags":["Programmierung"]},{"location":"Wiki%20Robotgame%20%26%20Robotdesign/GitHub/#repository","title":"Repository","text":"<p>Repositories funktionieren wie Ordner. Hier werden die tats\u00e4chlichen Dateien gespeichert, mitsamt ihrer Ordnerstruktur.</p>","tags":["Programmierung"]},{"location":"Wiki%20Robotgame%20%26%20Robotdesign/GitHub/#organisationen","title":"Organisationen","text":"<p>Mithilfe von Organisationen k\u00f6nnen mehrere Github-Nutzer auf ein oder mehrere Repositories zugreifen.</p>","tags":["Programmierung"]},{"location":"Wiki%20Robotgame%20%26%20Robotdesign/GitHub/#funktionen-von-gitgithub","title":"Funktionen von Git/Github:","text":"","tags":["Programmierung"]},{"location":"Wiki%20Robotgame%20%26%20Robotdesign/GitHub/#fetch","title":"Fetch","text":"<p>Mit Fetch wird ein Repository mitsamt s\u00e4mtlicher Branches heruntergeladen.</p>","tags":["Programmierung"]},{"location":"Wiki%20Robotgame%20%26%20Robotdesign/GitHub/#branch","title":"Branch","text":"<p>Erstellt einen Snapshot vom aktuellen Branch. Alle \u00c4nderungen, die auf dem neuen Branch passieren, haben keine Auswirkungen mehr auf den vorigen Branch.</p>","tags":["Programmierung"]},{"location":"Wiki%20Robotgame%20%26%20Robotdesign/GitHub/#commit","title":"Commit","text":"<p>Hat man ein Ziel erreicht, eine Funktion implementiert oder ist sonstwie fertig mit seinen Arbeiten, kann man einen Commit erstellen. Auch hier wird ein Snapshot der aktuellen Dateien erstellt. Der Commit hat eine ID, einen Namen und eine Beschreibung. Man sollte hier die \u00c4nderungen beschreiben und erkl\u00e4ren.</p>","tags":["Programmierung"]},{"location":"Wiki%20Robotgame%20%26%20Robotdesign/GitHub/#push","title":"Push","text":"<p>Mit Push wird die lokale Version des Repositories inklusive aller Branches in die Cloud \"geschoben\". Dabei muss darauf geachtet werden, dass die \u00c4nderungen keine Konflikte mit dem jeweiligen Branch verursachen. Daher sollte in den meisten F\u00e4llen jeder Programmierer seinen eigenen Branch haben.</p>","tags":["Programmierung"]},{"location":"Wiki%20Robotgame%20%26%20Robotdesign/GitHub/#pull-request","title":"Pull Request","text":"<p>Sind alle \u00c4nderungen in einem Branch implementiert und getestet, k\u00f6nnen sie durch das Erstellen einer Pull Request in den <code>main</code>-Branch eingekn\u00fcpft werden. Dabei k\u00f6nnen explizit Nutzer erw\u00e4hnt werden, die diese \u00c4nderungen \u00fcbersehen sollen.</p>","tags":["Programmierung"]},{"location":"Wiki%20Robotgame%20%26%20Robotdesign/GitHub/#merge","title":"Merge","text":"<p>Ist die Pull Request erfolgreich, kann nun der fertige Code aus dem Branch mit dem <code>main</code>-Branch gemerged werden.</p>","tags":["Programmierung"]},{"location":"Wiki%20Robotgame%20%26%20Robotdesign/GitHub/#github-im-rms-robotik-team","title":"Github im RMS Robotik Team","text":"<p>Unsere Github-Organisation hei\u00dft Mac-Lego-RMS. Wir haben nach einer gr\u00fcndlichen Aufr\u00e4umaktion aktuell 4 aktive Repositories:</p> <ul> <li>Spike_Python - hier befinden sich alle aktuellen Programme</li> <li>3D-Model - hier liegt das Stud.io CAD-Modell des Roboters</li> <li>robot-design - hier liegt die RobotDesign-Pr\u00e4sentation</li> <li>Forschungsprojekt - hier ist manchmal die neue PPP zu finden</li> </ul>","tags":["Programmierung"]},{"location":"Wiki%20Robotgame%20%26%20Robotdesign/GitHub/#arbeiten-mit-github-loki-laufeyson-als-programmierer","title":"Arbeiten mit Github / Loki Laufeyson als Programmierer","text":"<p>Git basiert auf Branches (Zweigen). Dabei gibt es einen <code>main</code>-Branch, der mit der sacred timeline aus Loki verglichen werden kann. Wenn ein Programmierer arbeitet, erzeugt er vorher sein eigenes Nexus event und befindet sich ab dann auf einer branched timeline - bzw. einem Branch/Zweig, wie es auf Github hei\u00dft. Der Programmierer hat nun das neue Feature fertiggestellt und einen Commit Das Programmieren mit Github l\u00e4sst sich sehr gut mit der Show Loki vergleichen. Es geht wie folgt:</p>","tags":["Programmierung"]},{"location":"Wiki%20Robotgame%20%26%20Robotdesign/GitHub/#nexus-event","title":"Nexus Event","text":"<p>Der Programmierer befindet sich anfangs auf dem <code>main</code>-Branch - vergleichbar mit der Sacred Timeline. Jetzt erzeugt er einen Branch. So wie ein Nexus Event wird durch das Erstellen eines Branches eine Momentaufnahme des Repositories erstellt, die sich ab dann unabh\u00e4ngig von der Sacred Timeline weiterentwickelt (bzw. dem <code>main</code>-Branch).</p>","tags":["Programmierung"]},{"location":"Wiki%20Robotgame%20%26%20Robotdesign/GitHub/#branched-timeline","title":"Branched Timeline","text":"<p>Alle \u00c4nderungen, die auf dem Branch stattfinden, haben keinerlei Auswirkungen auf die Sacred Timeline bzw. den <code>main</code>-Branch. Hier kann der Programmierer ungest\u00f6rt von der TVA programmieren, ohne sich vor einem Pruning f\u00fcrchten zu m\u00fcssen.</p>","tags":["Programmierung"]},{"location":"Wiki%20Robotgame%20%26%20Robotdesign/GitHub/#god-of-stories","title":"God of Stories","text":"<p>Ist der Programmierer fertig mit seinen \u00c4nderungen, erstellt er einen <code>Commit</code>. Er erkl\u00e4rt die \u00c4nderungen, die er in die Sacred Timeline einbringen m\u00f6chte. Anders als in Staffel 1 hat jetzt Loki als God of Stories die M\u00f6glichkeit, die Zweige der Entwickler zu verspinnen. Wird eine Pull Request best\u00e4tigt, k\u00f6nnen die \u00c4nderungen aus der Branched Timeline in die Sacred Timeline \u00fcbernommen werden (also in den <code>main</code>-Branch)</p>","tags":["Programmierung"]},{"location":"Wiki%20Robotgame%20%26%20Robotdesign/Gyro-Drift/","title":"Was ist Gyrodrift?","text":"","tags":["Programmierung"]},{"location":"Wiki%20Robotgame%20%26%20Robotdesign/Gyro-Drift/#wie-warum-entsteht-gyrodrift","title":"Wie / Warum entsteht Gyrodrift?","text":"","tags":["Programmierung"]},{"location":"Wiki%20Robotgame%20%26%20Robotdesign/Gyro-Drift/#die-2-arten-von-gyrodrift","title":"Die 2 Arten von Gyrodrift:","text":"","tags":["Programmierung"]},{"location":"Wiki%20Robotgame%20%26%20Robotdesign/Gyro-Drift/#programm-interner-gyrodrift","title":"Programm-interner Gyrodrift:","text":"","tags":["Programmierung"]},{"location":"Wiki%20Robotgame%20%26%20Robotdesign/Gyro-Drift/#systemglobaler-gyrodrift","title":"Systemglobaler Gyrodrift:","text":"","tags":["Programmierung"]},{"location":"Wiki%20Robotgame%20%26%20Robotdesign/Optimierung%20FoPro/","title":"Optimierung FoPro","text":"","tags":["Forschungsprojekt"]},{"location":"Wiki%20Robotgame%20%26%20Robotdesign/Optimierung%20FoPro/#optimierungsmoglichkeiten","title":"Optimierungsm\u00f6glichkeiten","text":"<ul> <li>die fetten folien kommen ins Backup, falls fragen kommen</li> <li>Mehr \u00fcben \u21d2 Geschwindigkeit herausnehmen</li> <li>die bisherigen Expertenmeinungen zusammenfassen</li> <li>expertenmeinungen besser streuen</li> <li>bessere Experten suchen</li> <li>Augmented Reality?? \u2014&gt; Backup-Folie</li> <li>Grundwerte in der FoPro sehr nervig betonen</li> </ul>","tags":["Forschungsprojekt"]},{"location":"Wiki%20Robotgame%20%26%20Robotdesign/Optimierung%20FoPro/#was-gut-war","title":"Was gut war","text":"<ul> <li>roter faden<ul> <li>Struktur beibehalten, nichts k\u00fcrzen</li> </ul> </li> <li>neues weiterentwickeltes darf dem alten nicht den Schatten stehlen</li> <li>der schauspieler von der KAF war gut als experte</li> <li>back-check von experten</li> </ul>","tags":["Forschungsprojekt"]},{"location":"Wiki%20Robotgame%20%26%20Robotdesign/Python%20Crashkurs/","title":"Python Crashkurs","text":"","tags":["Programmierung"]},{"location":"Wiki%20Robotgame%20%26%20Robotdesign/Python%20Crashkurs/#1-variablen-und-datentypen","title":"1. Variablen und Datentypen:","text":"<pre><code>pythonCopy code\n# Variablenzuweisung\nx = 5\nname = \"Max\"\nist_wahr = True\n\n# Datentypen: int, float, str, bool\ny = 3.14\ntext = \"Hallo\"\nist_falsch = False\n</code></pre> <p>Man beachte, dass es bei Python keine festen Variablen gibt. D.h. der Datentyp wird automatisch festgelegt. Man kann jedoch Variablen zwingen ein Datentyp anzunehmen durch casting.</p>","tags":["Programmierung"]},{"location":"Wiki%20Robotgame%20%26%20Robotdesign/Python%20Crashkurs/#2-bedingungen-und-schleifen","title":"2. Bedingungen und Schleifen:","text":"<pre><code>pythonCopy code\n# Bedingungen (if-elif-else)\nif x &gt; 0:\n    print(\"x ist positiv\")\nelif x == 0:\n    print(\"x ist Null\")\nelse:\n    print(\"x ist negativ\")\n\n# Schleifen (for und while)\nfor i in range(5):\n    print(i)\n\ncounter = 0\nwhile counter &lt; 5:\n    print(counter)\n    counter += 1\n</code></pre>","tags":["Programmierung"]},{"location":"Wiki%20Robotgame%20%26%20Robotdesign/Python%20Crashkurs/#3-listen-und-dictionaries","title":"3. Listen und Dictionaries:","text":"<pre><code>pythonCopy code\n# Listen (Arrays)\nzahlen = [1, 2, 3, 4, 5]\nnamen = [\"Max\", \"Anna\", \"Eva\"]\n\n# Zugriff auf Elemente einer Liste\nprint(zahlen[0])  # Ausgabe: 1\nprint(namen[1])   # Ausgabe: Anna\n\n# Dictionaries (Schl\u00fcssel-Wert-Paare)\nperson = {\"name\": \"Max\", \"alter\": 30, \"stadt\": \"Berlin\"}\n\n# Zugriff auf Werte in einem Dictionary\nprint(person[\"name\"])  # Ausgabe: Max\nprint(person[\"alter\"]) # Ausgabe: 30\n</code></pre>","tags":["Programmierung"]},{"location":"Wiki%20Robotgame%20%26%20Robotdesign/Python%20Crashkurs/#4-funktionen","title":"4. Funktionen:","text":"<pre><code>pythonCopy code\n# Funktionen definieren\ndef quadrat(x):\n    return x * x\n\n# Funktion aufrufen\nergebnis = quadrat(3)\nprint(ergebnis)  # Ausgabe: 9\n</code></pre>","tags":["Programmierung"]},{"location":"Wiki%20Robotgame%20%26%20Robotdesign/Python%20Crashkurs/#5-dateiverarbeitung","title":"5. Dateiverarbeitung:","text":"<pre><code>pythonCopy code\n# Datei \u00f6ffnen und lesen\nwith open(\"datei.txt\", \"r\") as f:\n    for line in f:\n        print(line.strip())\n\n# Datei schreiben\nwith open(\"neue_datei.txt\", \"w\") as f:\n    f.write(\"Hallo, Welt!\")\n</code></pre>","tags":["Programmierung"]},{"location":"Wiki%20Robotgame%20%26%20Robotdesign/Robot-Design/","title":"Unsere Arbeitsweise","text":"<ul> <li>Github zur Fortschrittsspeicherung ()</li> </ul> <p>(nur fragmentierte Notizen, ich hab gerade versucht, gedanken zu ordnen)</p>","tags":["Robotgame"]},{"location":"Wiki%20Robotgame%20%26%20Robotdesign/Video-Inspiration/","title":"Video Inspiration","text":"<p>https://youtu.be/UpDODb024sM</p> <p>https://youtu.be/AQ8sSBAFb3s</p> <p>https://youtu.be/EkyfhlHQ-ng</p> <p>https://youtu.be/6DiXGlP8-mM</p> <p>https://youtu.be/3UzyynQh9F8</p> <p>https://youtu.be/sCAVh5_Rsl4</p> <p>https://youtu.be/LoCr4dhFeAA</p> <p>https://youtu.be/IZYfitlELH0</p> <p>https://youtu.be/q4-dyVlvxyg</p> <p>https://youtu.be/LukCB6fyans</p> <p>https://youtu.be/q2O-5ZoL-qw</p> <p>https://youtu.be/wRmfP3Sm4Kc</p> <p>https://youtu.be/yFoLyAqZ6dc?si=jRI_cuRQr-IVfjBO</p>","tags":["Robotgame"]},{"location":"blog/","title":"Blog","text":""}]}